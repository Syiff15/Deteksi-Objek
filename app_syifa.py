# -*- coding: utf-8 -*-
"""App_Syifa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p07ybQjHsOFWoqgMK6v6g_PTvjUWnIQp
"""

#pip install streamlit
#pip install ultralytics

# === Import Library ===
import streamlit as st
import time
from PIL import Image
from ultralytics import YOLO
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np
from PIL import Image
import cv2

# === LOAD MODELS ===
@st.cache_resource
def load_models():
    yolo_model = YOLO("Model/best.pt")  # Model deteksi Gambar
    classifier = tf.keras.models.load_model("Model/Syifa Salsabila_Laporan 2.h5")  # Model klasifikasi
    return yolo_model, classifier

yolo_model, classifier = load_models()

# === KONFIGURASI DASAR HALAMAN WEB ===
st.set_page_config(page_title="Ursidetect", page_icon="🐻🐼", layout="centered")

# === STATE MANAGEMENT ===
if "step" not in st.session_state:
    st.session_state.step = 1
if "name" not in st.session_state:
    st.session_state.name = ""

# === NAVIGATION BAR (Progress Bar Sederhana) ===
def progress_bar(step):
    steps = ["Welcome to Ursidetect", "About Ursidetect", "Enter Your Name", "Let's Start"]
    cols = st.columns(len(steps))
    for i, label in enumerate(steps):
        with cols[i]:
            if i + 1 == step:
                st.markdown(f"**<span style='color:#2563eb;'>{i+1}. {label}</span>**", unsafe_allow_html=True)
            else:
                st.markdown(f"<span style='color:gray;'>{i+1}. {label}</span>", unsafe_allow_html=True)

# === STEP 1 ===
if st.session_state.step == 1:
    st.image("slide 1.jpg", use_container_width=True)

    # === Judul & Intro ===
    st.markdown(
    """
    <h1 style='text-align:center; color:#1E1E1E;'>
        Selamat datang di 
        <span style="color:#966543;">Ursidetect</span>
    </h1>
    <p style='text-align:center; font-size:18px; color:#1E1E1E;'>
        Sebelum kita mulai berpetualang, kenalan dulu yuk dengan <b>Ursidetect</b>!<br>
        Ursidetect adalah platform berbasis <b>kecerdasan buatan (AI)</b> yang dirancang untuk 
        <b>mendeteksi</b> dan <b>mengklasifikasikan</b> hewan <b>panda</b> serta <b>beruang</b>.
    </p>
    """,
    unsafe_allow_html=True
    )
    st.markdown("<br>", unsafe_allow_html=True)

    # === Dua Fitur dalam Kotak ===
    col1, col2 = st.columns(2)

    with col1:
        st.markdown("""
        <div style="
            background-color:#f2e6d6;
            padding:25px;
            border-radius:20px;
            box-shadow:0 4px 15px rgba(0,0,0,0.07);
            text-align:center;
            transition: transform 0.2s ease;">
            <h3>🐻‍❄️ Deteksi Gambar</h3>
            <p style="color:#282328; font-size:16px;">
            Ursidetect dapat menemukan dan menandai posisi panda atau beruang di dalam gambar 
            menggunakan kotak pembatas (<i>bounding box</i>).
            </p>
        </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown("""
        <div style="
            background-color:#f2e6d6;
            padding:25px;
            border-radius:20px;
            box-shadow:0 4px 15px rgba(0,0,0,0.07);
            text-align:center;
            transition: transform 0.2s ease;">
            <h3>🐼 Klasifikasi Gambar</h3>
            <p style="color:#282328; font-size:16px;">
            Ursidetect dapat menentukan apakah gambar tersebut termasuk panda 
            atau beruang, lengkap dengan tingkat kepercayaan (<i>confidence score</i>).
            </p>
        </div>
        """, unsafe_allow_html=True)

    st.markdown("<br><hr>", unsafe_allow_html=True)

    # === Tombol Lanjut ===
    st.markdown(
        "<p style='text-align:center; color:#282328; font-size:18px;'>Yuk lanjut ke langkah berikutnya untuk mulai berpetualang!</p>",
        unsafe_allow_html=True
    )
    
    col1, col2, col3 = st.columns([4, 1, 1])
    with col3:
        if st.button("Lanjut 🐾"):
            st.session_state.step = 2
            st.rerun()


# === STEP 2 ===
elif st.session_state.step == 2:
    st.image("slide 3-1.png", use_container_width=True)
    st.write("Sekarang giliran kamu! Masukkan namamu supaya Ursidetect tahu siapa partner barunya.")

    name_input = st.text_input("", placeholder="Contoh: Ursi")
    col_kiri, col_kanan = st.columns([4, 1])
    with col_kanan:
        if st.button("Lanjutkan 🐾"):
            if name_input.strip() != "":
                st.session_state.name = name_input.strip()
                st.session_state.step = 3
                st.rerun()
            else:
                st.info("Ups, sepertinya kamu lupa menulis namamu dulu nih 😊")

# === STEP 3 ===
elif st.session_state.step == 3:
    # === Judul Halaman ===
    st.markdown(f"""
    <div style='
        background-color:#f2e6d6;
        padding:25px;
        border-radius:15px;
        box-shadow:0 4px 15px rgba(0,0,0,0.1);
        text-align:center;
        margin-bottom:25px;'>
        <h1 style='color:#966543; margin-bottom:10px;'>
            Hai, <span style='text-transform:capitalize;'>{st.session_state.name.lower().split()[0]}</span>! 👋
        </h1>
        <p style='font-size:18px; color:#5b4636;'>
            Selamat datang di markas petualangan <b>Ursidetect</b>!  
            Pilih mode favoritmu — mau jadi <b>pemburu hewan</b> (deteksi) atau <b>peneliti hewan</b> (klasifikasi)?
        </p>
    </div>
    """, unsafe_allow_html=True)

    # === Pilihan Mode dalam Dua Kotak ===
    st.markdown("<h4 style='color:#966543; text-align:center;'>Pilih Mode Petualang:</h4>", unsafe_allow_html=True)
    col1, col2 = st.columns(2, gap="large")

    with col1:
        st.markdown("""
        <div style='
            background-color:#f2e6d6;
            padding:25px;
            border-radius:15px;
            box-shadow:0 4px 12px rgba(0,0,0,0.1);
            text-align:center;
        '>
            <h4 style='color:#966543;'>🐾 Pemburu Hewan</h4>
            <p style='color:#5b4636; font-size:14px;'>Mode <b>Deteksi</b> untuk menemukan lokasi panda dan beruang di gambar.</p>
        </div>
        """, unsafe_allow_html=True)
        if st.button("Pilih Mode Deteksi 🐾", use_container_width=True):
            st.session_state.mode = "deteksi"
            st.success("Mode dipilih: 🐾 Pemburu Hewan (Deteksi)")

    with col2:
        st.markdown("""
        <div style='
            background-color:#f2e6d6;
            padding:25px;
            border-radius:15px;
            box-shadow:0 4px 12px rgba(0,0,0,0.1);
            text-align:center;
        '>
            <h4 style='color:#966543;'>🔬 Peneliti Hewan</h4>
            <p style='color:#5b4636; font-size:14px;'>Mode <b>Klasifikasi</b> untuk mengenali apakah itu panda atau beruang.</p>
        </div>
        """, unsafe_allow_html=True)
        if st.button("Pilih Mode Klasifikasi 🔬", use_container_width=True):
            st.session_state.mode = "klasifikasi"
            st.success("Mode dipilih: 🔬 Peneliti Hewan (Klasifikasi)")

    st.divider()

    # === Upload Gambar ===
    st.markdown("<h4 style='color:#966543;'>🖼️ Masukkan Gambar</h4>", unsafe_allow_html=True)
    st.caption("Kamu bisa mengunggah satu atau beberapa gambar (jpg, jpeg, png).")

    uploaded_files = st.file_uploader(
        "",
        type=["jpg", "jpeg", "png"],
        accept_multiple_files=True
    )

    # === Tampilan Hasil Deteksi/Klasifikasi ===
    if uploaded_files:
        st.markdown("<h4 style='color:#966543;'>📸 Hasil Petualangan Kamu</h4>", unsafe_allow_html=True)
        st.write("")

        mode = st.session_state.get("mode", "deteksi")  # default mode
        cols = st.columns(2) if len(uploaded_files) > 1 else [st]

        for i, file in enumerate(uploaded_files):
            col = cols[i % len(cols)]
            with col:
                with st.container():
                    st.markdown(
                        """
                        <div style="
                            background-color:#FFF8E7;
                            border-radius:20px;
                            box-shadow:0 4px 12px rgba(0,0,0,0.1);
                            padding:20px;
                            margin-bottom:20px;
                            text-align:center;">
                        """,
                        unsafe_allow_html=True
                    )

                    img = Image.open(file).convert("RGB")
                    st.image(img, caption=f"🖼️ {file.name}", use_container_width=True)

                    if mode == "deteksi":
                        with st.spinner(f"🔍 Mendeteksi objek pada {file.name}..."):
                            results = yolo_model.predict(img, conf=0.6, verbose=False)
                            boxes = results[0].boxes

                            if boxes is not None and len(boxes) > 0:
                                st.image(results[0].plot(), caption="Hasil Petualangan", use_container_width=True)
                                st.success("✅ Objek berhasil terdeteksi!")
                            else:
                                st.warning("🚫 Tidak ada objek yang terdeteksi.")
                                st.info("Coba gunakan gambar panda atau beruang yang lebih jelas untuk hasil terbaik.")

                    elif mode == "klasifikasi":
                        with st.spinner(f"🧠 Mengklasifikasi {file.name}..."):
                            img_resized = img.resize((128, 128))
                            img_array = image.img_to_array(img_resized)
                            img_array = np.expand_dims(img_array, axis=0) / 255.0

                            prediction = classifier.predict(img_array)
                            class_index = np.argmax(prediction)
                            confidence = np.max(prediction)
                            labels = ["Panda", "Beruang"]
                            predicted_label = labels[class_index]

                            st.write(f"🎯 **Hasil Prediksi:** *{predicted_label}* ({confidence:.2f})")
                            st.progress(float(confidence))

                            if confidence > 0.85:
                                st.success("Model sangat yakin dengan hasil prediksi ini!")
                            elif confidence > 0.6:
                                st.warning("Model agak ragu, tapi masih cukup yakin.")
                            else:
                                st.error("Model tidak yakin, mungkin ini bukan gambar panda atau beruang.")
                                st.markdown("💡 Saran: Gunakan gambar yang lebih jelas.")

                    st.markdown("</div>", unsafe_allow_html=True)
    
    col_kiri, col_kanan = st.columns([4, 1])
    with col_kanan:
        if st.button("Lanjutkan 🐾"):
            st.session_state.step = 4
            st.rerun()

# === STEP 4 ===
elif st.session_state.step == 4:
    st.subheader("💬 Cerita Petualanganmu")
    st.info("""
    Petualanganmu bersama Ursidetect sudah selesai 🐾  
    Ceritakan pengalamanmu, ya! Kami ingin tahu bagaimana rasanya menjelajahi dunia panda & beruang bersama AI ini.
    """)
    feedback_text = st.text_area("Bagaimana Petualanganmu?", placeholder="Kirimkan ceritamu di sini...")

    if st.button("Kirim Cerita Petualanganku"):
        if feedback_text.strip() == "":
            st.warning("Cerita Kamu sangat berarti bagi kami 😊")
        else:
            st.success(f"✅ Terima kasih atas ceritanya, {st.session_state.name.lower().split()[0]}!")

    st.markdown("---")
    if st.button("🔁 Mau memulai lagi?"):
        st.session_state.step = 1
        st.session_state.name = ""
        st.rerun()
