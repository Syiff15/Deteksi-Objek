# -*- coding: utf-8 -*-
"""App_Syifa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p07ybQjHsOFWoqgMK6v6g_PTvjUWnIQp
"""

#pip install streamlit
#pip install ultralytics

# === Import Library ===
import streamlit as st
import time
from PIL import Image
from ultralytics import YOLO
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np
from PIL import Image
import cv2

# === LOAD MODELS ===
@st.cache_resource
def load_models():
    yolo_model = YOLO("Model/best.pt")  # Model deteksi Gambar
    classifier = tf.keras.models.load_model("Model/Syifa Salsabila_Laporan 2.h5")  # Model klasifikasi
    return yolo_model, classifier

yolo_model, classifier = load_models()

# === KONFIGURASI DASAR HALAMAN WEB ===
st.set_page_config(page_title="Ursidetect", page_icon="üêªüêº", layout="centered")

# === STATE MANAGEMENT ===
if "step" not in st.session_state:
    st.session_state.step = 1
if "name" not in st.session_state:
    st.session_state.name = ""

# === NAVIGATION BAR (Progress Bar Sederhana) ===
def progress_bar(step):
    steps = ["Welcome to Ursidetect", "About Ursidetect", "Enter Your Name", "Let's Start"]
    cols = st.columns(len(steps))
    for i, label in enumerate(steps):
        with cols[i]:
            if i + 1 == step:
                st.markdown(f"**<span style='color:#2563eb;'>{i+1}. {label}</span>**", unsafe_allow_html=True)
            else:
                st.markdown(f"<span style='color:gray;'>{i+1}. {label}</span>", unsafe_allow_html=True)

# === STEP 1 ===
if st.session_state.step == 1:
    #progress_bar(1)
    st.image("C:/Users/Syifa Salsabila/Pictures/Camera Roll/buat tulisannya lebih estetik.jpg", use_container_width=True)
    st.title("Welcome to Ursidetect")
    st.write("Kami membantu Anda mengenali isi gambar dengan cepat dan mudah melalui teknologi AI yang cerdas.")
    st.write("Yuk, cari tahu apa yang tersembunyi di setiap gambar Anda.")
    
    col_kiri, col_kanan = st.columns([4, 1])
    with col_kanan:
        if st.button("Ayo Mulai!!!"):
            st.session_state.step = 2
            st.rerun()  
            
# === STEP 2 ===
elif st.session_state.step == 2:
    #progress_bar(2)
    st.image("C:/Users/Syifa Salsabila/Pictures/Camera Roll/Ursidetect adalah platform analisis gambar berbasis kecerdasan buatan (AI) yang dirancang khusus untuk mendeteksi dan mengklasifikasikan gambar panda serta beruang dengan cepat dan akurat.__Deteksi Gambar.jpg", use_container_width=True)
    st.title("Tentang Ursidetect")
    st.markdown("""
    **Ursidetect** adalah platform analisis gambar berbasis kecerdasan buatan (AI) yang dirancang khusus untuk mendeteksi dan mengklasifikasikan gambar **panda** serta **beruang** dengan cepat dan akurat.
    """)  
    
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        **Deteksi Gambar:** Fitur ini mampu mengenali dan menandai posisi panda atau beruang yang muncul di dalam gambar menggunakan kotak pembatas (bounding box).""")
    with col2:
        st.markdown("""
        **Klasifikasi Gambar:** Fitur ini akan mengidentifikasi apakah gambar yang Anda unggah adalah panda atau beruang, lengkap dengan tingkat kepercayaan (confidence score) dari hasil analisis AI.""")
    st.markdown("""
    Cukup unggah gambar Anda, pilih metode analisis, dan biarkan Ursidetect menentukan apakah itu panda atau beruang.
    Ayo Kita Lanjutkan!!!
    """) 
    
    col_kiri, col_kanan = st.columns([4, 1])
    with col_kanan:
        if st.button("Lanjut"):
            st.session_state.step = 3
            st.rerun()

        
# === STEP 3 ===
elif st.session_state.step == 3:
    #progress_bar(3)
    st.image("C:/Users/Syifa Salsabila/Pictures/Camera Roll/SIAPA NAMA ANDA.png", width=300)
    st.title("Siapa Nama Kamu?")
    st.write("Masukkan namamu di bawah, biar Ursidetect tahu siapa partner barunya dalam berpetualang.üêæ")
    name_input = st.text_input("Ketik namamu di bawah ini:")

    col_kiri, col_kanan = st.columns([4, 1])
    with col_kanan:
        if st.button("Lanjut") and name_input.strip() != "":
            st.session_state.name = name_input.strip()
            st.session_state.step = 4
            st.rerun()
            
# === STEP 4 ===
elif st.session_state.step == 4:
    #progress_bar(4)
    st.title(f"Hai, {st.session_state.name.lower().split()[0]}! üëã")
    st.caption("Senang berkenalan denganmu. Selanjutnya, mari kita mulai petualangannya!!")
    st.caption("Pilih mode favoritmu: mau jadi pemburu hewan (deteksi) atau peneliti hewan (klasifikasi)?")

    st.markdown("### Mode Petualang")
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        #### üîç Deteksi Gambar  
        Mode ini akan mendeteksi keberadaan dan posisi **panda** atau **beruang** di dalam gambar.
        """)
    with col2:
        st.markdown("""
        #### üñºÔ∏è Klasifikasi Gambar  
        Mode ini akan menentukan apakah gambar yang diunggah adalah **panda** atau **beruang**.
        """)
        
    analysis_type = st.radio(
        "Pilih Mode Petualang:",
        ["Deteksi Gambar", "Klasifikasi Gambar"],
        horizontal=True,
        index=0,
    )
    st.divider()

    st.markdown("### Masukkan Gambar")
    st.caption("Untuk mulai berpetualang, {st.session_state.name.lower().split()[0]} harus memasukkan gambar berbentuk jpg, jpeg atau png yaa.")
    uploaded_file = st.file_uploader("Pilih gambar (jpg, jpeg, png):", type=["jpg", "jpeg", "png"])
    if uploaded_file:
        image = Image.open(uploaded_file)
        st.image(image, caption=uploaded_file.name, use_container_width=True)
    else:
        st.info("Silahkan masukkan gambar terlebih dahulu.")
    st.divider()

    st.markdown("### Hasil Petualang")
    analyze_button = st.button("üîé Mulai Petualangan", use_container_width=True)
    if analyze_button:
        if not uploaded_file:
            st.warning("‚ö†Ô∏è Silakan masukkan gambar terlebih dahulu sebelum berpetualang.")
        else:
            with st.spinner("‚è≥ Sedang Berpetualang..."):
                time.sleep(2)  # simulasi proses

            # === Dummy hasil simulasi ===
            if analysis_type == "Deteksi Gambar":
                results = st.session_state.yolo_model(image)
                result_img = results[0].plot()
                st.image(result_img, caption="Hasil Deteksi", use_container_width=True)
                boxes = results[0].boxes
                names = results[0].names
                detected_classes = [names[int(cls)] for cls in boxes.cls.cpu().numpy()]
                if len(detected_classes) > 0:
                    st.success("**Hasil Buruanmu:**")
                    for obj in detected_classes:
                        st.write(f"- {obj}")
                else:
                    st.warning("Tidak ada objek panda atau beruang yang terdeteksi.")

            else:
                img_resized = image.resize((224, 224))  # sesuaikan ukuran modelmu
                img_array = tf.keras.preprocessing.image.img_to_array(img_resized)
                img_array = np.expand_dims(img_array, axis=0) / 255.0

                prediction = st.session_state.cnn_model.predict(img_array)
                class_index = np.argmax(prediction)
                confidence = np.max(prediction) * 100
                label_names = ["Beruang", "Panda"]  # sesuaikan labelmu

                st.success("**Hasil Penelitianmu:**")
                st.write(f"Gambar diklasifikasikan sebagai **{label_names[class_index]}** üêºüêª")
                st.write(f"Confidence: {confidence:.2f}%")

# === FEEDBACK BOX (hanya muncul di akhir) ===
if st.session_state.step == 4:
    st.markdown("---")
    st.subheader("üí¨ Saran")
    feedback_text = st.text_area("Bagaimana Petualanganmu?", placeholder="Kirimkan ceritamu di sini...")

    if st.button("Kirim Saran"):
        if feedback_text.strip() == "":
            st.warning("Saran Anda sangat berarti bagi kami.")
        else:
            st.success(f"‚úÖ Terima kasih atas sarannya, {st.session_state.name.lower().split()[0]}!")

    # === RESTART BUTTON ===
    st.markdown("---")
    if st.button("üîÅ Restart"):
        st.session_state.step = 1
        st.session_state.name = ""
        st.rerun()
